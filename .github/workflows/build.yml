name: CI
run-name: ${{ github.actor }} using Rust Build

on:
  workflow_dispatch:
  push:
  release:

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: "Check out repository: ${{ github.repository }} branch: ${{ github.ref }} by event: ${{ github.event_name }}"
        uses: actions/checkout@master
        with:
          persist-credentials: 'false'

      - name: "Build on server: ${{ runner.os }}"
        uses: rust-build/rust-build.action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: x86_64-unknown-linux-musl
          EXTRA_FILES: "README.md LICENSE"
          PRE_BUILD: "pre_build.sh"
          POST_BUILD: "test/post_build.sh"
          #ARCHIVE_NAME: micro-rust-archive

      - name: "List Output"
        run: |
          ls ${{ github.workspace }}

  upload:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Upload Release"
          uses: actions/upload-release-asset@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: build/MyProject.zip
            asset_name: MyProject.zip
            asset_content_type: application/zip
